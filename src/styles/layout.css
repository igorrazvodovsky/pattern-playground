@layer layout {
  .flow > * + * {
    margin-block-start: var(--flow-space, var(--space-m));
  }

  .layout-grid {
    --layout-grid-min: 24ch;
    --layout-grid-gap: var(--space-m);

    display: grid;
    grid-template-columns: repeat(
      /* auto-fit, */ auto-fill,
      minmax(min(100%, var(--layout-grid-min)), 1fr)
    );
    gap: var(--layout-grid-gap);

    /* When used with a list */
    padding: 0;
  }

  .flex-layout-grid {
    --flex-grid-min: 24ch;
    --flex-grid-gap: var(--space-m);

    display: flex;
    flex-wrap: wrap;
    gap: var(--flex-grid-gap);

    > * {
      /* TODO: */
      flex: 1 1 var(--flex-grid-min);
    }
  }

  :is(.layout-grid, .flex-layout-grid) > * {
    container: var(--grid-item-container, grid-item) / inline-size;
  }

  hr {
    border: 0;
    height: 0;
    border-top: 1px solid oklch(0% 0 0 / 10%);
    width: 100%;
    margin: 0;
  }

  .flex {
    display: flex;
    gap: 0.5ch;
    align-items: center;
  }

  .block {
    display: block;
  }
}

@layer components {
  .border {
    border: var(--border);
  }

  .borderless {
    border: none !important;
    /* padding-inline: 0 !important; */
  }
}

/* TODO: */
/* .flex-layout-grid > *:has(.card > *:nth-child(2)) {
  --flex-grid-min: calc(24ch * 2 + var(--space-m));
} */
