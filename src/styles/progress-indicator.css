.stepper {
  --_circle-size: 1.5rem;
  --_spacing: 0.5rem;
  --_line-width: 1px;
  --_item-spacing: 1rem;

  margin: 0;
  padding: 0;
}

.stepper .stepper {
  --_line-width: 0;
  --_spacing: 0;
  --_item-spacing: 0;

  p {
    font-size: smaller;
  }

  .stepper__item {
    padding-inline-start: 0;
  }
}

.stepper__item {
  /* background-color: var(--debug); */
  position: relative;
  display: flex;
  gap: 1rem;
  padding: 1rem 1rem var(--_item-spacing) 1rem;
  border-radius: var(--radius-l);
  /* overflow-x: clip; */

  &:has(.stepper) {
    padding-bottom: 0;
  }

  &:not(:has(.stepper__icon)):before {
    content: "";
    flex: 0 0 var(--_circle-size);
    height: var(--_circle-size);
    border-radius: 50%;
    background-color: var(--c-neutral-200);
    margin-top: 0.5rem;
  }

  &.stepper__item--done:not(:has(.stepper__icon)):before {
    background-color: var(--c-success-500);
  }

  &.stepper__item--current:not(:has(.stepper__icon)):before {
    background-color: var(--c-accent);
  }

  &.stepper__item--running:not(:has(.stepper__icon)):before {
    background-color: transparent;
  }

  &.stepper__item--next:not(:has(.stepper__icon)):before {
    background-color: transparent;
    border: 2px solid var(--c-neutral-200);
  }

  &:not(:last-child) {
    &:after {
      content: "";
      position: absolute;
      left: 1rem;
      top: calc(var(--_circle-size) + var(--_spacing) + 1rem + 0.5rem);
      bottom: calc(var(--_spacing) - 1rem - 0.5rem);
      /* z-index: -1; */
      transform: translateX(calc(var(--_circle-size) / 2));
      width: var(--_line-width);
      background-color: var(--c-neutral-100);
    }
  }
}

.stepper__icon {
  flex: 0 0 var(--_circle-size);
  width: var(--_circle-size);
  height: var(--_circle-size);
  border-radius: 50%;
  background-color: var(--c-neutral-100);
  display: flex;
  align-items: center;
  justify-content: center;
  margin-top: 0.5rem;

  iconify-icon {
    font-size: 1rem;
  }
}

.stepper__item--current .stepper__icon {
  background-color: var(--c-accent);
  /* TODO: calculate color based on accent color */
  color: white;
}

.stepper__item--danger .stepper__icon {
  background-color: var(--c-danger-100);
  color: var(--c-danger-600);
}

.stepper__item--warning .stepper__icon {
  background-color: var(--c-warning-100);
  color: var(--c-warning-600);
}

.stepper__item--running .stepper__icon {
  background-color: transparent;
}

.stepper__item--next .stepper__icon {
  background-color: transparent;
  border: 2px solid var(--c-neutral-100);
}

.stepper details {
  --_state-indicator-spacing: 1.5rem;
  border: none;
  padding: 0;
}
