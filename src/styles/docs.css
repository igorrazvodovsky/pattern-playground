.sbdocs {
  max-width: unset !important;
}

/* TODO: */
.sbdocs *:not(code) {
  font-family: inherit !important;
}

.sbdocs > * > code {
  font-family: var(--font-code);
  font-size: smaller !important;
}

.sbdocs-wrapper {
  padding-inline: 3rem !important;
}

.sidebar-item svg {
  display: none;
}

.sbdocs > h2,
.sbdocs > section > h2 {
  margin-block: 2rem 1rem;
  border-bottom: none;
}

.sbdocs > blockquote {
  background: oklch(0% 0 0 / 5%);
  border-color: oklch(0% 0 0 / 10%);
  padding: var(--space-s) var(--space-m);
  max-width: 70ch;
}

:where(p:not(.sb-anchor, .sb-unstyled, .sb-unstyled p)),
.sbdocs > *:not(.sb-story) li:not(.sb-anchor, .sb-unstyled, .sb-unstyled) {
  font-size: 16px !important;
  max-width: 70ch;
  text-wrap: balance;
}

/* Override for list items inside .sb-story to prevent the above rule from applying */
.sbdocs-wrapper .sb-story li,
.sbdocs-preview .sb-story li,
.docs-story .sb-story li,
div.sb-story li,
.sb-story > li,
.sb-story li,
.sbdocs .sb-story li {
  max-width: none !important;
  width: auto !important;
}

.sbdocs-content > a,
a.sbdocs,
.sbdocs-content > :is(p, h1, h2, h3, h4) a {
  color: inherit !important;
  /* TODO: Fix */
  text-decoration: underline oklch(from #2e3438 l c h / 0.6) !important;
  text-decoration-thickness: max(0.05em, 1px);
  text-underline-offset: 0.15em;
}

.lead {
  font-size: larger !important;
  line-height: var(--globalLineHeight) !important;
  text-wrap: balance;
  margin-bottom: 2rem !important;
}

.card a::first-letter,
.description::first-letter,
.description--full::first-letter,
button::first-letter,
h4::first-letter,
h3::first-letter,
.badge,
.badge * {
  text-transform: capitalize;
}

#popover-tooltip[popover] {
  position-anchor: --anchor_1;
  inset-block-start: anchor(--anchor_1 top);
  inset-inline-start: anchor(--anchor_1 left);
}

#popover-1[popover] {
  position-anchor: --anchor_2;
  inset-block-start: anchor(--anchor_2 top);
  inset-inline-start: anchor(--anchor_2 left);
}

.docs-palette {
  display: flex;
  width: min-content;
}

.docs-palette > * {
  flex: 10ch 0 0;
  padding: var(--space-s) var(--space-m);
  font-size: var(--text-xs) !important;
  text-transform: uppercase;
  font-weight: 500;
  letter-spacing: 0.1em;

  --l-threshold: 0.7;
  --l: clamp(0, (l / var(--l-threshold) - 1) * -infinity, 1);
  --palette-color: oklch(from var(--palette-bg) var(--l) 0 h / 90%);

  color: var(--palette-color);
  background-color: var(--palette-bg);
}

.docs-palette p {
  margin: 0 !important;
  font-size: var(--text-xs) !important;
  color: inherit;
}

/*
.sb-show-main table {
  width: 100%;
  table-layout: fixed;
}

.docs-color-preview {
  display: inline-block;
  width: 1em;
  height: 1em;
  vertical-align: middle;
  margin-inline-end: 1ch !important;
  border: 1px solid oklch(0% 0 0 / 10%);
}

resize-asaurus > .resize-asaurus-container {
  padding: 2rem;
  border: 1px solid oklch(0% 0 0 / 10%);
}

.sbdocs.sbdocs-content {
  max-width: initial;
}

.sbdocs.sbdocs-wrapper {
  padding: 4rem;
}
 */

.sbdocs > h1,
.sbdocs > h2,
.sbdocs > h3,
.sbdocs > h4,
.sbdocs > h5 {
  margin-block: 2rem 1rem !important;
}

.sbdocs > ol,
.sbdocs > ul {
  list-style: auto;
}

.sbdocs .toolbar {
  display: inline-flex;
  align-items: center;
  gap: 1ch;
  /* background: var(--c-neutral-50); */
  /* padding: var(--space-s) var(--space-l); */
  margin-block: var(--space-m);
  border-radius: 999px;

  & .hue-value::before {
    content: var(--h);
  }
}

.sb-story {
  border: 1px solid var(--c-neutral-100);
  padding: 1.5rem;
  border-radius: var(--radius-m);
}

.docs-story .sb-story {
  border: none;
  padding: 0;
}

.sbdocs.sbdocs-content + div:has(.toc-wrapper) {
  width: 30ch;

  & > div {
    width: 30ch;
  }

  &:has(.toc-list-item:only-child),
  &:has(.toc-wrapper:empty) {
    display: none;
  }

  .toc-list-item {
    font-size: var(--text-s) !important;

    & > a {
      text-decoration: none !important;
    }
  }

  .toc-list-item.is-active-li > a {
    color: inherit;
  }
}

.sb-bar {
  margin-top: 0 !important;
}

.docs-intro-img {
  border: 1px solid oklch(0% 0 0 / 30%);
  /* transform: translate(-2rem, 2rem); */
}
