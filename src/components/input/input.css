:host {
  display: block;

  --input-height-s: 1.875rem;
  --input-height-m: 2.5rem;
  --input-height-l: 3.125rem;

  --input-border-width: 1px;
}

.input {
  flex: 1 1 auto;
  display: inline-flex;
  align-items: stretch;
  justify-content: start;
  position: relative;
  width: 100%;
  font-family: inherit;
  vertical-align: middle;
  overflow: hidden;
  cursor: text;
  transition: var(--transition-fast) color, var(--transition-fast) border,
    var(--transition-fast) box-shadow, var(--transition-fast) background-color;
}

.input {
  background-color: var(--c-background);
  border: var(--input-border);
}

.input:hover:not(.input--disabled) {
  background-color: var(--c-background);
  border-color: var(--c-hover-border);
}

.input.input--focused:not(.input--disabled) {
  background-color: var(--c-background);
  border-color: var(--c-active-border);
  box-shadow: 0 0 0 var(--focus-ring-width) var(--input-focus-ring-color);
}

.input.input--focused:not(.input--disabled) .input__control {
  /* TODO: */
  color: var(--debug);
}

.input.input--disabled {
  background-color: var(--c-disabled-bg);
  border-color: var(--c-disabled-border);
  opacity: 0.5;
  cursor: not-allowed;
}

.input.input--disabled .input__control {
  color: var(--c-body);
}

.input.input--disabled .input__control::placeholder {
  /* TODO: */
  color: var(--c-tertiary);
}

.input__control {
  flex: 1 1 auto;
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  min-width: 0;
  height: 100%;
  color: var(--c-body);
  border: none;
  background: inherit;
  box-shadow: none;
  padding: 0;
  margin: 0;
  cursor: inherit;
  -webkit-appearance: none;
}

.input__control::-webkit-search-decoration,
.input__control::-webkit-search-cancel-button,
.input__control::-webkit-search-results-button,
.input__control::-webkit-search-results-decoration {
  -webkit-appearance: none;
}

/* TODO: -webkit-autofill */

.input__control::placeholder {
  color: var(--c-tertiary);
  user-select: none;
  -webkit-user-select: none;
}

.input:hover:not(.input--disabled) .input__control {
  color: var(--c-hover-primary);
}

.input__control:focus {
  outline: none;
}

.input__prefix,
.input__suffix {
  display: inline-flex;
  flex: 0 0 auto;
  align-items: center;
  cursor: default;
  /* Fix for button inside input TODO: replace with smth. */
  padding-block-end: 1px;
}

.input__prefix ::slotted(*),
.input__suffix ::slotted(*) {
  color: var(--c-secondary);
}

/* Size */

.input--small {
  border-radius: var(--radius-s);
  font-size: var(--input-text-s);
  height: var(--input-height-s);
}

.input--small .input__control {
  height: calc(var(--input-height-s) - var(--input-border-width) * 2);
  padding: 0 var(--space-s);
}

.input--small .input__clear,
.input--small .input__password-toggle {
  width: calc(1em + var(--space-s) * 2);
}

.input--small .input__prefix ::slotted(*:not(button)) {
  margin-inline-start: var(--space-s);
}

.input--small .input__suffix ::slotted(*) {
  margin-inline-end: var(--space-s);
}

.input--medium {
  border-radius: var(--radius-m);
  font-size: var(--font-size-m);
  height: var(--input-height-m);
}

.input--medium .input__control {
  height: calc(var(--input-height-m) - var(--input-border-width) * 2);
  padding: 0 var(--space-m);
}

.input--medium .input__clear,
.input--medium .input__password-toggle {
  width: calc(1em + var(--space-m) * 2);
}

.input--medium .input__prefix ::slotted(*:not(button)) {
  margin-inline-start: var(--space-m);
}

.input--medium .input__prefix ::slotted(button) {
  margin-inline-start: var(--space-xs);
}

.input--medium .input__suffix ::slotted(*) {
  margin-inline-end: var(--space-m);
}

.input--large {
  border-radius: var(--input-border-radius-l);
  font-size: var(--font-size-l);
  height: var(--input-height-l);
}

.input--large .input__control {
  height: calc(var(--input-height-l) - var(--input-border-width) * 2);
  padding: 0 var(--space-l);
}

.input--large .input__clear,
.input--large .input__password-toggle {
  width: calc(1em + var(--space-l) * 2);
}

.input--large .input__prefix ::slotted(*) {
  margin-inline-start: var(--space-l);
}

.input--large .input__suffix ::slotted(*) {
  margin-inline-end: var(--space-l);
}

/* Clearable */

.input__clear:not(.input__clear--visible) {
  visibility: hidden;
}

.input__clear {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-size: inherit;
  color: var(--c-secondary);
  border: none;
  background: none;
  padding: 0;
  transition: var(--transition-fast) color;
  cursor: pointer;
}

.input__clear:hover {
  color: var(--c-hover-secondary);
}

.input__clear:focus {
  outline: none;
}

.input--empty .input__clear {
  visibility: hidden;
}
